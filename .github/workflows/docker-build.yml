name: Docker Build

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v3
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
    
    - name: Build API Docker image
      uses: docker/build-push-action@v4
      with:
        context: ./api
        push: false
        load: true
        tags: forvard-api:test
        cache-from: type=gha
        cache-to: type=gha,mode=max
    
    - name: Test API container
      run: |
        # Create network
        docker network create forvard_network || true
        
        # Create volume for logs and uploads
        docker volume create forvard_logs || true
        
        # Run container in the background
        docker run -d \
          --name forvard_api_test \
          --network forvard_network \
          -p 8443:8443 \
          -e JWT_SECRET_KEY="test_jwt_secret_key" \
          -e SESSION_SECRET_KEY="test_session_secret_key" \
          -e USE_SQLITE_FOR_TESTS="true" \
          -v forvard_logs:/app/logs \
          forvard-api:test
        
        # Wait for container to start and be ready
        echo "Waiting for container to be ready..."
        for i in {1..30}; do
          if docker ps | grep -q forvard_api_test; then
            echo "Container is running, checking if API is ready..."
            
            # Test with retry logic
            for j in {1..10}; do
              echo "Attempt $j: Testing API endpoint..."
              
              # Test health endpoint first (if available)
              HEALTH_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8443/health 2>/dev/null || echo "000")
              
              # Test docs endpoint
              DOCS_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8443/docs 2>/dev/null || echo "000")
              
              # Test root endpoint as fallback
              ROOT_RESPONSE=$(curl -s -o /dev/null -w "%{http_code}" http://localhost:8443/ 2>/dev/null || echo "000")
              
              echo "Health: $HEALTH_RESPONSE, Docs: $DOCS_RESPONSE, Root: $ROOT_RESPONSE"
              
              if [ "$HEALTH_RESPONSE" = "200" ] || [ "$DOCS_RESPONSE" = "200" ] || [ "$ROOT_RESPONSE" = "200" ]; then
                echo "API endpoint is responding correctly"
                exit 0
              fi
              
              if [ $j -lt 10 ]; then
                echo "API not ready yet, waiting 3 seconds..."
                sleep 3
              fi
            done
            
            echo "API failed to respond after 10 attempts"
            echo "Container logs:"
            docker logs forvard_api_test
            exit 1
          fi
          
          if [ $i -lt 30 ]; then
            echo "Container not running yet, waiting 2 seconds..."
            sleep 2
          fi
        done
        
        echo "Container failed to start within 60 seconds"
        docker logs forvard_api_test
        exit 1
    
    - name: Cleanup
      if: always()
      run: |
        docker rm -f forvard_api_test || true
        docker network rm forvard_network || true